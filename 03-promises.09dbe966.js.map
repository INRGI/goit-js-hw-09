{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAeC,SAASC,cAAc,SACtCC,EAAgBF,SAASC,cAAc,uBACvCE,EAAeH,SAASC,cAAc,sBACtCG,EAAiBJ,SAASC,cAAc,wBA8B9C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,CAAEH,WAAUC,UAGtBG,EAAO,CAAEJ,WAAUC,S,GAClBA,E,IAtCPR,EAAagB,iBAAiB,UAE9B,SAAkBC,GAChBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOjB,EAAckB,OAC3BC,EAAOF,OAAOhB,EAAaiB,OAC3BE,EAASH,OAAOf,EAAegB,OAGrC,GAAIF,GAAS,GAAKG,GAAQ,GAAKC,GAAU,EACvC,OAAOC,EAAA1B,GAAS2B,OAAOC,QAAQ,gCAGjC,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,IAE3BrB,EADWqB,EACaR,GACrBS,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBgB,EAAA1B,GAAS2B,OAAOK,QAAQ,qBAAoCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAEnEwB,OAAM,SAAAH,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBgB,EAAA1B,GAAS2B,OAAOC,QAAQ,oBAAmCK,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAErEW,GAASG,EAEXtB,EAAaiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formSelector = document.querySelector('.form');\nconst delaySelector = document.querySelector('input[name=\"delay\"]');\nconst stepSelector = document.querySelector('input[name=\"step\"]');\nconst amountSelector = document.querySelector('input[name=\"amount\"]');\n\nformSelector.addEventListener('submit', onSubmit)\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(delaySelector.value);\n  const step = Number(stepSelector.value);\n  const amount = Number(amountSelector.value);\n  let position = 0;\n\n  if (delay <= 0 || step <= 0 || amount <= 0) {\n    return Notiflix.Notify.failure('Please enter a correct value');\n  }\n\n  for (let i = 1; i <= amount; i++){\n    position = i;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  };\n  formSelector.reset();\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formSelector","document","querySelector","$ce04d3a99e08e73b$var$delaySelector","$ce04d3a99e08e73b$var$stepSelector","$ce04d3a99e08e73b$var$amountSelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","$parcel$interopDefault","Notify","failure","i","then","param","success","concat","catch","reset"],"version":3,"file":"03-promises.09dbe966.js.map"}